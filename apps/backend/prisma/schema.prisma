generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String  @id @unique @default(cuid()) @map("_id")
  username String
  email    String  @unique
  password String
  verified Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profiles Profile[]

  @@map("accounts")
}

model Profile {
  id String @id @unique @default(cuid()) @map("_id")

  name      String
  avatarUrl String
  age       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Account   Account? @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String?

  @@map("profiles")
}

model Movie {
  id          String @id @unique @default(cuid()) @map("_id")
  title       String
  description String
  sourceUrl   String
  duration    String
  rating      Int
  age         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("movies")
}

model Show {
  id          String   @id @unique @default(cuid()) @map("_id")
  name        String
  description String
  rating      Int
  age         Int
  seasons     Season[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("shows")
}

model Season {
  id     String  @id @unique @default(cuid()) @map("_id")
  name   String
  Show   Show?   @relation(fields: [showId], references: [id], onDelete: Cascade)
  showId String?

  episodes Episode[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("seasons")
}

model Episode {
  id        String  @id @unique @default(cuid()) @map("_id")
  imageUrl  String?
  sourceUrl String
  name      String
  Season    Season? @relation(fields: [seasonId], references: [id], onDelete: Cascade)
  seasonId  String?
  duration  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("episodes")
}
